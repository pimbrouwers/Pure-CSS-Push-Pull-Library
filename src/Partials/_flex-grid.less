.pure-g-flex {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: flex;
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

div[class*="pure-u-flex"]{
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.flex(@prefix, @n, @i) {
  .pure-u-flex@{prefix}-@{i}-@{n} {
    -webkit-flex-basis: round(@i * 100% / @n, 4);
    -ms-flex-preferred-size: round(@i * 100% / @n, 4);
    flex-basis: round(@i * 100% / @n, 4);
    max-width: round(@i * 100% / @n, 4);
  }
}

.flexs(@prefix, @n, @i: 1) when (@i < @n) {
  .flex(@prefix, @n, @i);
  .flexs(@prefix, @n, (@i + 1));
}

.flexs-all(@prefix){
  .flexs(@prefix, 2);
  .flexs(@prefix, 3);
  .flexs(@prefix, 4);
  .flexs(@prefix, 5);
  .flexs(@prefix, 6);
  .flexs(@prefix, 8);
  .flexs(@prefix, 12);
  .flexs(@prefix, 24);
}

.flexs-all(~"");  

@media screen and (min-width: @sm-breakpoint) {  
  .flexs-all(@prefix-sm);  
}

@media screen and (min-width: @md-breakpoint) {
  .flexs-all(@prefix-md);   
}

@media screen and (min-width: @lg-breakpoint) {
  .flexs-all(@prefix-lg);  
}

@media screen and (min-width: @xl-breakpoint) {
  .flexs-all(@prefix-xl);  
}